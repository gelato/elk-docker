---

  - name: Setup rabbitmq master container
    docker:
      name: rabbitmq
      image: "rabbitmq:{{ rmq_version }}-management"
      hostname: "{{ hostvars[inventory_hostname]['inventory_hostname'] }}"
      env:
        RABBITMQ_ERLANG_COOKIE: "{{ erlang_cookie }}"
        RABBITMQ_DEFAULT_VHOST: "{{ item.name }}"
        RABBITMQ_NODENAME: "{{ item.node }}"
        RABBITMQ_HIPE_COMPILE: "{{ rmq_hipe_compile }}"
      state: "{{ docker_rmq_state }}"
      pull: always
      volumes:
        - "/var/log/machines/rabbitmq-{{ hostvars[inventory_hostname]['inventory_hostname'] }}:/var/log"
        - /etc/hosts:/etc/hosts
      ports:
        - "{{ rabbitmq_talking_port }}:15672"
        - 4369:4369
        - 5671:5671
        - 5672:5672
        - 25672:25672
      restart_policy: unless-stopped
    with_items: "{{ rabbitmq_vhost_definitions }}"
    when: inventory_hostname == "{{ rabbitmq_master }}"

  - name: Setup rabbitmq slave containers
    docker:
      name: rabbitmq
      image: "rabbitmq:{{ rmq_version }}-management"
      hostname: "{{ hostvars[inventory_hostname]['inventory_hostname'] }}"
      env:
        RABBITMQ_ERLANG_COOKIE: "{{ erlang_cookie }}"
        RABBITMQ_DEFAULT_VHOST: "{{ item.name }}"
        RABBITMQ_NODENAME: "{{ item.node }}"
        RABBITMQ_HIPE_COMPILE: "{{ rmq_hipe_compile }}"
      state: "{{ docker_rmq_state }}"
      pull: always
      volumes:
        - /opt/rabbit:/opt/rabbit
        - /etc/hosts:/etc/hosts
      ports:
        - "{{ rabbitmq_talking_port }}:15672"
        - 4369:4369
        - 5671:5671
        - 5672:5672
        - 25672:25672
      restart_policy: unless-stopped
    with_items: "{{ rabbitmq_vhost_definitions }}"
    when: form_cluster and inventory_hostname != "{{ rabbitmq_master }}"

  - name: "Waiting for RabbitMQ HIPE compilation on {{ hostvars[inventory_hostname]['inventory_hostname'] }}"
    uri:
       url: "http://127.0.0.1:8080/api/users"
       status_code: 200
       force_basic_auth: yes
       user: guest
       password: guest
    register: result
    until: result.status == 200
    retries: 150
    delay: 1
    when: rmq_hipe_compile > 0

  - name: Run clustering ssh script
    command: >-
     docker exec -idt
     rabbitmq
     /opt/rabbit/join_cluster.sh
    when: not clustered.stat.exists and (form_cluster and inventory_hostname != "{{ rabbitmq_master }}")

  - name: Create RabbitMQ admin user | REST Install
    uri:
      url: "http://localhost:{{ rabbitmq_talking_port }}/api/users/{{ item.user }}"
      headers:
        content-type: application/json
      method: PUT
      force_basic_auth: yes
      user: guest
      password: guest
      status_code: 204
      body_format: json
      body: '{"password":"{{ item.password }}","tags":"{{ item.tags }}" }'
    with_items: "{{ rabbitmq_users_definitions }}"
    when: not clustered.stat.exists and (inventory_hostname == "{{ rabbitmq_master }}")
