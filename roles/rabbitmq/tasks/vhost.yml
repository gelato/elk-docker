---
- name: ensure rabbitmq is running
  service: name=rabbitmq-server state=started

- name: Ensure rabbitmq_app is running
  command: rabbitmqctl start_app
  ignore_errors: true

- name: add rabbitmq vhost
  rabbitmq_vhost:
    name: "{{ item.name }}"
    node: "{{ item.node | default('rabbit') }}"
    tracing: "{{ item.tracing | default('no') }}"
    state: present
  run_once: yes
  with_items: "{{ rabbitmq_vhost_definitions }}"

- name: add rabbitmq user and set privileges
  rabbitmq_user:
    name: "{{ item.user }}"
    password: "{{ item.password }}"
    vhost: "{{ item.vhost | default('/', false) }}"
    tags: "{{ (item.tags | default('')) | join(',') }}"
    configure_priv: "{{ item.configure_priv | default('.*') }}"
    read_priv: "{{ item.read_priv | default('.*') }}"
    write_priv: "{{ item.write_priv | default('.*') }}"
    state: present
    force: "{{ item.force|default('yes') }}"
  with_items: "{{ rabbitmq_users_definitions }}"
  when: (enable_rabbitmq_clustering is defined and not enable_rabbitmq_clustering) or enable_rabbitmq_clustering is not defined

- name: rabbitmq_users | creating rabbitmq users
  rabbitmq_user:
    name: "{{ item.user }}"
    password: "{{ item.password }}"
    vhost: "{{ item.vhost | default('/', false) }}"
    configure_priv: "{{ item.configure_priv | default('.*') }}"
    read_priv: "{{ item.read_priv | default('.*') }}"
    write_priv: "{{ item.write_priv | default('.*') }}"
    tags: "{{ (item.tags | default('')) | join(',') }}"
    state: present
  run_once: yes
  with_items: "{{ rabbitmq_users_definitions }}"
  when: (enable_rabbitmq_clustering is defined and enable_rabbitmq_clustering)
