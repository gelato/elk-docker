---

  - name: RabbitMQ HA | Creating queue(s)
    command: >-
       rabbitmqadmin -H localhost -P {{ rabbitmq_talking_port }}
       -u {{ item.user }} -p {{ item.password }}
       declare queue
       name="{{ item.queue_name }}"
       durable="{{ item.durable|lower }}"
       auto_delete=false
       --vhost="{{ item.vhost }}"
       --node="{{ item.node }}"
    with_items: "{{ rabbitmq_config }}"
    when: inventory_hostname == "{{ rabbitmq_master }}"
    ignore_errors: true

  - name: RabbitMQ HA | setting up HA on queue(s)
    command: >-
       rabbitmqadmin -H localhost -P {{ rabbitmq_talking_port }}
       -u {{ item.user }} -p {{ item.password }}
       declare policy
       name="ha-all"
       pattern='.*'
       apply-to="all"
       definition='{"ha-mode":"all"}'
       --vhost="{{ item.vhost }}"
    with_items: "{{ rabbitmq_config }}"
    when: inventory_hostname == "{{ rabbitmq_master }}"
    ignore_errors: true

  - name: RabbitMQ HA | Create exchange(s)
    command: >-
       rabbitmqadmin -H localhost -P {{ rabbitmq_talking_port }}
       -u {{ item.user }} -p {{ item.password }}
       declare exchange
       name="{{ item.exchange_name }}"
       type="{{ item.type }}"
       durable="{{ item.durable }}"
       auto-delete="false"
       internal="false"
       --vhost="{{ item.vhost }}"
    with_items: "{{ rabbitmq_config }}"
    when: inventory_hostname == "{{ rabbitmq_master }}"
    ignore_errors: true

  - name: RabbitMQ HA | Create exchange(s)
    command: >-
       rabbitmqadmin -H localhost -P {{ rabbitmq_talking_port }}
       -u {{ item.user }} -p {{ item.password }}
       declare exchange
       name="{{ item.exchange_name }}"
       type="{{ item.type }}"
       durable="{{ item.durable }}"
       auto-delete="false"
       internal="false"
       --vhost="{{ item.vhost }}"
    with_items: "{{ rabbitmq_config }}"
    when: inventory_hostname == "{{ rabbitmq_master }}"
    ignore_errors: true

  - name: RabbitMQ HA | Create binding(s)
    command: >-
       rabbitmqadmin -H localhost -P {{ rabbitmq_talking_port }}
       -u {{ item.user }} -p {{ item.password }}
       declare binding
       source="{{ item.exchange_name }}"
       destination_type="queue"
       destination="{{ item.queue_name }}"
       routing_key="{{ item.routing_key }}"
       --vhost="{{ item.vhost }}"
    with_items: "{{ rabbitmq_config }}"
    when: inventory_hostname == "{{ rabbitmq_master }}"
    ignore_errors: true
